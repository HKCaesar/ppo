# Builds the ontology.  This Makefile is intended for out-of-source builds and
# will refuse to run if executed from the root of the source directory.  To
# build the ontoogy, create a separate build directory and run make from within
# this directory.  E.g., if the source directory is the current directory:
#
# $ mkdir build
# $ cd build
# $ make -f ../Makefile
#


#--------
# IMPORTANT: Customize the variables in this section to configure the ontology
# build process.
#--------

# Ontology terms source CSV files (REQUIRED).  These are the names of the terms
# source files that you wish to compile into the final ontology.  Note that
# these need to be specified manually because the order in which they are
# processed often matters.  As long as your project follows the suggested
# directory structure, you only need to provide the names of the files here,
# not full paths.
termsfiles := PPO_supporting_class_definitions.csv PPO_stage_definitions.csv

# The IRI (ID) for the compiled ontology (REQUIRED).
ontology_IRI := https://raw.githubusercontent.com/PlantPhenoOntology/PPO/master/ontology/ppo.owl

# The suffix to use for naming the import module OWL files generated by
# extracting terms from external ontologies (REQUIRED).
import_mod_suffix := _ppo_import_module.owl

# The location of the ontobuilder executables (OPTIONAL).  By default, the
# build process assumes that the location of the build executables has been
# added to the search path, but if that is not the case, you must provide their
# location as the value of the variable "ontobuilder_bin".
ontobuilder_bin := ../../ontobuilder/bin


#--------
# NOTE: Unless you have a non-standard source structure (i.e., you are not
# following the suggested directory structure), you should not need to modify
# anything else in the rest of this Makefile.
#--------


#--------
# Initial configuration for the build process and error checks.
#--------

# Get the location of the root of the ontology source tree.
srcroot = $(realpath $(dir $(lastword $(MAKEFILE_LIST))))

# Check if make is being run from the source directory; if so, quit.
cwd = $(realpath $(shell pwd))
ifeq ($(srcroot),$(cwd))
  $(error Error: The PPO should not be built inside the source tree.  Please \
    run make from a separate build directory)
endif

# If the location of the ontobuilder executables was not explicity provided,
# try to get it from the search path.
ifeq ($(ontobuilder_bin),)
  ontobuilder_bin := $(shell which import_module_builder.py)
endif

# Make sure we got the location of the ontobuilder executables.
ifeq ($(ontobuilder_bin),)
  $(error Error: The ontobuilder executables could not be located.  Please \
    add them to the search path or specify their location by setting the \
    the value of the variable "ontobuilder_bin" in this Makefile)
endif


#--------
# Variables and macros for processing ontology import modules.
#--------

# The location of the source files for imports.
importdir := $(srcroot)/src/imports

# The top-level imports source file.  This is the file that lists the
# ontologies from which terms should be imported.
imports_source := $(importdir)/imported_ontologies.csv

# Construct the base IRI to use when generating IRIs for the OWL module files.
ont_IRI_dir := $(dir $(ontology_IRI))
mod_baseIRI := $(patsubst %/master/ontology/,%/master/import_modules/,$(ont_IRI_dir))
#$(info $(mod_baseIRI))


#--------
# Additional variables and macros for ontology compilation.
#--------

# The location of the ontology source files.
srcdir := $(srcroot)/src

# Generate full paths to the ontology terms source CSV files.
termsfilepaths := $(addprefix $(srcdir)/,$(termsfiles))


#--------
# Build rule definitions for the import modules.
#--------

.PHONY: imports
imports: $(imports_source)
	$(ontobuilder_bin)/build_import_modules.py --importsfile $(imports_source) \
	    --outputsuffix $(import_mod_suffix) --baseIRI $(mod_baseIRI)


#--------
# Build rule definitions for the ontology.
#--------

.PHONY: ontology
ontology: ppo.owl

ppo.owl: $(srcdir)/ppo-base.owl $(termsfilepaths)
	$(ontobuilder_bin)/csv_to_owl.py -b $(srcdir)/ppo-base.owl -i $(ontology_IRI) -o ppo.owl $(termsfilepaths)


# Set "ontology" as the default build goal.
.DEFAULT_GOAL := ontology

